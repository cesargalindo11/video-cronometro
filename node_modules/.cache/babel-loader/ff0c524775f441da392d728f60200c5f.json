{"ast":null,"code":"var _jsxFileName = \"/home/cesar/Escritorio/Tiempo/timer-video/src/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App';\nimport { useTimer } from 'react-timer-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MyTimer({\n  expiryTimestamp\n}, props) {\n  _s();\n\n  const {\n    stado\n  } = props;\n  const {\n    seconds,\n    minutes,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn('onExpire called')\n  });\n\n  if (stado) {\n    start;\n  } else {\n    pause;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"react-timer-hook \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Timer Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '100px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isRunning ? 'Running' : 'Not running'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resume,\n      children: \"Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        // Restarts to 40 second timer\n        const time = new Date();\n        time.setSeconds(time.getSeconds() + 40);\n        restart(time);\n      },\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyTimer, \"VUuPRVErlnGqLtQxg0ZbSg+Ymn0=\", false, function () {\n  return [useTimer];\n});\n\n_c = MyTimer;\nexport default function Timer(props) {\n  const {\n    stado\n  } = props;\n  const time = new Date();\n  time.setSeconds(time.getSeconds() + 40); // 40 second timer\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MyTimer, {\n      expiryTimestamp: (time, stado)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n_c2 = Timer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyTimer\");\n$RefreshReg$(_c2, \"Timer\");","map":{"version":3,"sources":["/home/cesar/Escritorio/Tiempo/timer-video/src/Timer.js"],"names":["React","useTimer","MyTimer","expiryTimestamp","props","stado","seconds","minutes","isRunning","start","pause","resume","restart","onExpire","console","warn","textAlign","fontSize","time","Date","setSeconds","getSeconds","Timer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,OAAP;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAqCC,KAArC,EAA4C;AAAA;;AAC1C,QAAM;AAACC,IAAAA;AAAD,MAAQD,KAAd;AACA,QAAM;AACJE,IAAAA,OADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,KALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA;AAPI,MAQFX,QAAQ,CAAC;AAAEE,IAAAA,eAAF;AAAmBU,IAAAA,QAAQ,EAAE,MAAMC,OAAO,CAACC,IAAR,CAAa,iBAAb;AAAnC,GAAD,CARZ;;AASF,MAAGV,KAAH,EAAS;AACPI,IAAAA,KAAK;AACN,GAFD,MAEK;AAACC,IAAAA,KAAK;AAAC;;AAEV,sBACE;AAAK,IAAA,KAAK,EAAE;AAACM,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAZ;AAAA,8BACE;AAAA,kBAAOV;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,oBACyB;AAAA,kBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,cADzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAA,gBAAIE,SAAS,GAAG,SAAH,GAAe;AAA5B;AAAA;AAAA;AAAA;AAAA,YANF,eAQE;AAAQ,MAAA,OAAO,EAAEG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrB;AACA,cAAMO,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,QAAAA,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,KAAoB,EAApC;AACAT,QAAAA,OAAO,CAACM,IAAD,CAAP;AACD,OALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAjCQhB,O;UAUHD,Q;;;KAVGC,O;AAmCT,eAAe,SAASoB,KAAT,CAAelB,KAAf,EAAsB;AACnC,QAAM;AAACC,IAAAA;AAAD,MAAQD,KAAd;AACA,QAAMc,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,EAAAA,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,KAAoB,EAApC,EAHmC,CAGM;;AACzC,sBACE;AAAA,2BAGM,QAAC,OAAD;AAAS,MAAA,eAAe,GAAEH,IAAI,EAACb,KAAP;AAAxB;AAAA;AAAA;AAAA;AAAA;AAHN,mBADF;AAQD;MAZuBiB,K","sourcesContent":["import React from 'react';\nimport './App'\nimport { useTimer } from 'react-timer-hook';\n\nfunction MyTimer({ expiryTimestamp },props) {\n  const {stado}=props\n  const {\n    seconds,\n    minutes,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart,\n  } = useTimer({ expiryTimestamp, onExpire: () => console.warn('onExpire called') });\nif(stado){\n  start\n}else{pause}\n\n  return (\n    <div style={{textAlign: 'center'}}>\n      <h1>react-timer-hook </h1>\n      <p>Timer Demo</p>\n      <div style={{fontSize: '100px'}}>\n        <span>{minutes}</span>:<span>{seconds}</span>\n      </div>\n      <p>{isRunning ? 'Running' : 'Not running'}</p>\n    \n      <button onClick={resume}>Resume</button>\n      <button onClick={() => {\n        // Restarts to 40 second timer\n        const time = new Date();\n        time.setSeconds(time.getSeconds() + 40);\n        restart(time)\n      }}>Restart</button>\n    </div>\n  );\n}\n\nexport default function Timer(props) {\n  const {stado}=props;\n  const time = new Date();\n  time.setSeconds(time.getSeconds() + 40); // 40 second timer\n  return (\n    <>\n  \n\n          <MyTimer expiryTimestamp={time,stado} />\n\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}
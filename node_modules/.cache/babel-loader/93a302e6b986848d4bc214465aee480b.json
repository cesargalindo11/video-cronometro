{"ast":null,"code":"var _jsxFileName = \"/home/cesar/Escritorio/Tiempo/timer-video/src/Timer2.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CountDownTimer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      days: 0,\n      hours: '00',\n      minutes: '00',\n      seconds: '00',\n      timeUp: false\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      let eventDate = +new Date(this.props.date);\n      let difference = date - +new Date();\n\n      if (difference < 1) {\n        this.setState({\n          timeUp: true\n        });\n      } else {\n        let days = Math.floor(difference / (1000 * 60 * 60 * 24));\n        let hours = Math.floor(difference / (1000 * 60 * 60) % 24);\n        let minutes = Math.floor(difference / (1000 * 60) % 60);\n        let seconds = Math.floor(difference / 1000 % 60);\n        this.setState({\n          hours: hours > 9 ? hours : `0${hours}`,\n          minutes: minutes > 9 ? minutes : `0${minutes}`,\n          seconds: seconds > 9 ? seconds : `0${seconds}`,\n          days\n        });\n      }\n    }, 1000);\n  }\n\n  render() {\n    const {\n      days,\n      hours,\n      minutes,\n      seconds,\n      timeUp\n    } = this.state;\n    const dayString = days > 1 ? 'days' : 'day';\n    return timeUp ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Event in progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `${days} ${dayString} ${hours} hours ${minutes}  minutes ${seconds} seconds`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default CountDownTimer;","map":{"version":3,"sources":["/home/cesar/Escritorio/Tiempo/timer-video/src/Timer2.js"],"names":["React","Component","CountDownTimer","state","days","hours","minutes","seconds","timeUp","componentDidMount","setInterval","eventDate","Date","props","date","difference","setState","Math","floor","render","dayString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCE,KADmC,GAC3B;AACJC,MAAAA,IAAI,EAAE,CADF;AAEJC,MAAAA,KAAK,EAAE,IAFH;AAGJC,MAAAA,OAAO,EAAE,IAHL;AAIJC,MAAAA,OAAO,EAAE,IAJL;AAKJC,MAAAA,MAAM,EAAE;AALJ,KAD2B;AAAA;;AASnCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,WAAW,CAAC,MAAM;AACd,UAAIC,SAAS,GAAG,CAAC,IAAIC,IAAJ,CAAS,KAAKC,KAAL,CAAWC,IAApB,CAAjB;AACA,UAAIC,UAAU,GAAGD,IAAI,GAAG,CAAC,IAAIF,IAAJ,EAAzB;;AAAqC,UAAIG,UAAU,GAAG,CAAjB,EAAoB;AACrD,aAAKC,QAAL,CAAc;AAAER,UAAAA,MAAM,EAAE;AAAV,SAAd;AACH,OAFoC,MAE9B;AACH,YAAIJ,IAAI,GAAGa,IAAI,CAACC,KAAL,CAAWH,UAAU,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAArB,CAAX;AACA,YAAIV,KAAK,GAAGY,IAAI,CAACC,KAAL,CAAYH,UAAU,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAX,GAAkC,EAA7C,CAAZ;AACA,YAAIT,OAAO,GAAGW,IAAI,CAACC,KAAL,CAAYH,UAAU,IAAI,OAAO,EAAX,CAAX,GAA6B,EAAxC,CAAd;AACA,YAAIR,OAAO,GAAGU,IAAI,CAACC,KAAL,CAAYH,UAAU,GAAI,IAAf,GAAwB,EAAnC,CAAd;AACA,aAAKC,QAAL,CAAc;AACVX,UAAAA,KAAK,EAAEA,KAAK,GAAG,CAAR,GAAYA,KAAZ,GAAqB,IAAGA,KAAM,EAD3B;AAEVC,UAAAA,OAAO,EAAEA,OAAO,GAAG,CAAV,GAAcA,OAAd,GAAyB,IAAGA,OAAQ,EAFnC;AAGVC,UAAAA,OAAO,EAAEA,OAAO,GAAG,CAAV,GAAcA,OAAd,GAAyB,IAAGA,OAAQ,EAHnC;AAIVH,UAAAA;AAJU,SAAd;AAMH;AACJ,KAhBU,EAgBR,IAhBQ,CAAX;AAiBH;;AAACe,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,OAAf;AAAwBC,MAAAA,OAAxB;AAAiCC,MAAAA;AAAjC,QAA4C,KAAKL,KAAvD;AACA,UAAMiB,SAAS,GAAGhB,IAAI,GAAG,CAAP,GAAW,MAAX,GAAoB,KAAtC;AAA6C,WACzCI,MAAM,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,gBAGF;AAAA,gBAAK,GAAEJ,IAAK,IAAGgB,SAAU,IAAGf,KAAM,UAASC,OAAQ,aAAYC,OAAQ;AAAvE;AAAA;AAAA;AAAA;AAAA,YAJqC;AAMhD;;AAnCkC;;AAoCrC,eAAeL,cAAf","sourcesContent":["import React, { Component } from 'react';\nclass CountDownTimer extends Component {\n    state = {\n        days: 0,\n        hours: '00',\n        minutes: '00',\n        seconds: '00',\n        timeUp: false\n    }\n\n    componentDidMount() {\n        setInterval(() => {\n            let eventDate = +new Date(this.props.date);\n            let difference = date - +new Date(); if (difference < 1) {\n                this.setState({ timeUp: true });\n            } else {\n                let days = Math.floor(difference / (1000 * 60 * 60 * 24));\n                let hours = Math.floor((difference / (1000 * 60 * 60)) % 24);\n                let minutes = Math.floor((difference / (1000 * 60)) % 60);\n                let seconds = Math.floor((difference / (1000)) % 60);\n                this.setState({\n                    hours: hours > 9 ? hours : `0${hours}`,\n                    minutes: minutes > 9 ? minutes : `0${minutes}`,\n                    seconds: seconds > 9 ? seconds : `0${seconds}`,\n                    days\n                });\n            }\n        }, 1000)\n    } render() {\n        const { days, hours, minutes, seconds, timeUp } = this.state;\n        const dayString = days > 1 ? 'days' : 'day'; return (\n            timeUp ?\n                <p>Event in progress</p>\n                :\n                <p>{`${days} ${dayString} ${hours} hours ${minutes}  minutes ${seconds} seconds`}</p>\n        );\n    }\n} export default CountDownTimer;"]},"metadata":{},"sourceType":"module"}